name: Build, test, deploy

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash

concurrency:
  group: python-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3
      - name: Display Python information
        run: python -c "import sys; print(sys.version)"
      - name: Build sdist and wheel
        run: pipx run build
      - name: Check release tools
        run: pipx run twine check dist/*
      - name: Save build output
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        install: [repo]
        include:
          - python-version: "3.11"
            install: sdist
          - python-version: "3.11"
            install: wheel
          - python-version: "3.11"
            install: editable
    env:
      INSTALL_TYPE: ${{ matrix.install }}
    steps:
    - uses: actions/checkout@v3
      if: matrix.install == 'repo' || matrix.install == 'editable'
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Fetch packages
      if: matrix.install == 'sdist' || matrix.install == 'wheel'
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    - name: Select archive
      run: |
        if [ "$INSTALL_TYPE" = "sdist" ]; then
          ARCHIVE=$( ls dist/*.tar.gz )
        elif [ "$INSTALL_TYPE" = "wheel" ]; then
          ARCHIVE=$( ls dist/*.whl )
        elif [ "$INSTALL_TYPE" = "repo" ]; then
          ARCHIVE="."
        elif [ "$INSTALL_TYPE" = "editable" ]; then
          ARCHIVE="-e ."
        fi
        echo "ARCHIVE=$ARCHIVE" | tee -a $GITHUB_ENV
    - name: Install package
      run: python -m pip install $ARCHIVE

  publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.repository == 'nipreps/nipreps' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
